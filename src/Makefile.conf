.KEEP_STATE:

##
## This is the system configuration file that is used by all 
## packages.  It is presently generated by hand.  It should
## be generated by a GNU Autoconf script.
##

##

#CXXFLAGS  += -DCLEANUP
#CFLAGS    += -DCLEANUP

##
## Executables (indirect)
##

SHELL         = sh
RM            = rm -rf
CC            = gcc
CXX           = g++
AR            = ar r
CPP           = g++
RANLIB        = ranlib
MKDIR         = install -d
INSTALL_TEXT  = install -m 664
INSTALL_EXEC  = install -m 775 $(STRIP)
INSTALL_LIB   = install -m 664
INSTALL_H     = -$(SILENT) ln -s
#INSTALL_H     = $(SILENT) cp -fd
INSTALL_ETC   = -$(SILENT) ln -s
#INSTALL_ETC   = $(SILENT) cp -fd
CP            = cp
ECHO          = @echo
#SUDO          = sudo
SUDO          = echo "* SUDO DID NOT DO:"
LEX           = flex -i
YACC          = yacc -dv
CURSES_TYPE   = curses
PERL          = perl
AWK           = awk

GLIB_CONFIG   = /opt/gnome/bin/glib-config
GSL_CONFIG    = /usr/bin/gsl-config
GTS_CONFIG    = /usr/bin/gts-config
MAGICK_CONFIG = /usr/bin/Magick-config

##
## Architecture independence
## This section will need much work to make the system truely portable
##

OS_NAME      = $(shell uname -s)
OS_VER       = $(shell uname -r | $(AWK) '{print substr($$2,0,1)}' )
OS_MINOR_VER = $(shell uname -r | $(AWK) '{print substr($$2,3,1)}' )
CPU_TYPE     = $(shell uname -m)

##
## arch options
##

DEPEND      = Makefile.depend
OBJ_DIR     = obj
GUI_DIR     = gui


##
## Install directories
##

PREFIX    = ../..
POSTFIX   = 

SRC_DIR   = $(PREFIX)/src
INC_DIR   = $(PREFIX)/include
NAV_DIR   = $(PREFIX)/include/navigation
BEE_DIR   = $(PREFIX)/include/bee
LIB_DIR   = $(PREFIX)/lib
BIN_DIR   = $(PREFIX)/bin
ETC_DIR   = $(PREFIX)/etc
LOG_DIR   = $(PREFIX)/log
DOC_DIR   = $(PREFIX)/doc

CRM_DIR   = $(HOME)/carmen
#CRM_DIR   = $(CARMEN_HOME)


##
## Official release (permits users to work with incomplete code)
##

OFFICIAL_ROOT_DIR = $(CRM_DIR)

OFFICIAL_INC_DIR   = $(OFFICIAL_ROOT_DIR)/include
OFFICIAL_SRC_DIR   = $(OFFICIAL_ROOT_DIR)/src
OFFICIAL_ETC_DIR   = $(OFFICIAL_ROOT_DIR)/etc
OFFICIAL_LIB_DIR   = $(OFFICIAL_ROOT_DIR)/lib
OFFICIAL_DOC_DIR   = $(OFFICIAL_ROOT_DIR)/doc
OFFICIAL_DAT_DIR   = $(OFFICIAL_ROOT_DIR)/data
OFFICIAL_BIN_DIR   = $(OFFICIAL_ROOT_DIR)/bin

CARMEN_INC_DIR     = $(CRM_DIR)\include

##
## Compilation options
##

INCLUDES   += -I. \
              -I$(INC_DIR) \
              -I$(OFFICIAL_INC_DIR) \
              -I$(CARMEN_INC_DIR) \
              -I/usr/local/include \
	      -I/usr/X11/include \
	      -I/usr/include/X11 \

LIB_DIRS   += -L. \
              -L$(OBJ_DIR) \
              -L$(LIB_DIR) \
              -L$(OFFICIAL_LIB_DIR) \
              -I/usr/local/lib \
	      -L/usr/X11R6/lib \
	      -L/usr/lib/X11 \
	      -L/usr/lib/termcap

CFLAGS     += $(OPT_FLAGS) $(USER_DEFINES) 
CXXFLAGS   += $(OPT_FLAGS) $(USER_DEFINES) 

CFLAGS     += -Wall -O2 -W -Winline -Wnested-externs -Wno-shadow
CXXFLAGS   += -Wall -O2 -W -Winline -Wno-shadow

##
## Either "@" for quiet or "" for verbose
##

SILENT = @

##
## Compiler optimization/debugging flags (-g -O2 can be combined)
##

#OPT_FLAGS   = -g -O4
OPT_FLAGS   =
#OPT_FLAGS   = -g -O0

##
## uncomment to strip executables during installation
##

#STRIP = -s

##
## OS-specific libraries
##

ifeq ($(OS_NAME),Linux)
OS_LIBS =
#OS_LIBS = -lbsd
else
ifeq ($(OS_VER), 5)
OS_LIBS = -lsocket -lnsl
else
OS_LIBS =
endif
endif

QT_DIR_PREFIX = /usr/lib

QT_DIRS = qt3 qt-3.0.5 qt-3.0.4 qt-3.0.3 qt-3.0.0 qt-2.3.2 qt-2.3.1 qt-2.3.0

QT_DIR = $(shell for f in $(QT_DIRS) ; do if [ -d $(QT_DIR_PREFIX)/$$f ]; then echo "$(QT_DIR_PREFIX)/$$f"; break; fi; done;)

QT_BIN = $(QT_DIR)/bin

QT_VERSION = $(shell grep QT_VERSION_STR $(QT_DIR)/include/qglobal.h | cut -d \" -f 2 )

ifeq ($(shell echo $(QT_VERSION) | cut -b 1),3)
QT3 = yes
else
QT3 = no
endif

ifeq ($(OS_NAME),Linux)
LINUX_MAKEFILE = /usr/src/linux/Makefile

VERSION = $(shell head -10 $(LINUX_MAKEFILE) | fgrep VERSION \
	| fgrep = | fgrep -v "\#" | cut -d "=" -f 2 | tr -d ' ' )

PATCHLEVEL = $(shell head -10 $(LINUX_MAKEFILE) | fgrep PATCHLEVEL \
	| fgrep = | fgrep -v "\#" | cut -d "=" -f 2 | tr -d ' ' )

SUBLEVEL = $(shell head -10 $(LINUX_MAKEFILE) | fgrep SUBLEVEL \
	| fgrep = | fgrep -v "\#" | cut -d "=" -f 2 | tr -d ' ' )

LINUX_VERSION_CODE = $(shell echo `expr $(VERSION) \\* 65536 + \
	$(PATCHLEVEL) \\* 256 + $(SUBLEVEL)` )

SMP = $(shell head -20 $(LINUX_MAKEFILE) | fgrep SMP | fgrep -v "_PROF" \
	| fgrep = | fgrep -v "\#" | cut -d "=" -f 2 | tr -d ' ' )

SMP_PROF = $(shell head -20 $(LINUX_MAKEFILE) | fgrep SMP_PROF \
	| fgrep = | fgrep -v "\#" | cut -d "=" -f 2 | tr -d ' ' )
endif

VARS  = ../Makefile.vars

VARS_EXISTS = $(shell if [ -f $(VARS) ]; then echo "1"; else echo "0"; fi;)

ifeq ($(VARS_EXISTS),1)
  include $(VARS)
endif

CFLAGS      += $(GLIB_CFLAGS) $(GSL_CFLAGS) $(GTS_CFLAGS) $(MAGICK_CFLAGS)
CXXFLAGS    += $(GLIB_CFLAGS) $(GSL_CFLAGS) $(GTS_CFLAGS) $(MAGICK_CPPFLAGS)
EXTERN_LIBS := $(GLIB_LIBS) $(GSL_LIBS) $(GTS_LIBS) $(MAGICK_LIBS)
